// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/xaraphix/Sif/internal/raft (interfaces: RaftHeart)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRaftHeart is a mock of RaftHeart interface.
type MockRaftHeart struct {
	ctrl     *gomock.Controller
	recorder *MockRaftHeartMockRecorder
}

// MockRaftHeartMockRecorder is the mock recorder for MockRaftHeart.
type MockRaftHeartMockRecorder struct {
	mock *MockRaftHeart
}

// NewMockRaftHeart creates a new mock instance.
func NewMockRaftHeart(ctrl *gomock.Controller) *MockRaftHeart {
	mock := &MockRaftHeart{ctrl: ctrl}
	mock.recorder = &MockRaftHeartMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRaftHeart) EXPECT() *MockRaftHeartMockRecorder {
	return m.recorder
}

// StartBeating mocks base method.
func (m *MockRaftHeart) StartBeating() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StartBeating")
}

// StartBeating indicates an expected call of StartBeating.
func (mr *MockRaftHeartMockRecorder) StartBeating() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartBeating", reflect.TypeOf((*MockRaftHeart)(nil).StartBeating))
}

// StopBeating mocks base method.
func (m *MockRaftHeart) StopBeating() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StopBeating")
}

// StopBeating indicates an expected call of StopBeating.
func (mr *MockRaftHeartMockRecorder) StopBeating() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopBeating", reflect.TypeOf((*MockRaftHeart)(nil).StopBeating))
}
