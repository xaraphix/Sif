// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/xaraphix/Sif/internal/raft (interfaces: RaftFile)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRaftFile is a mock of RaftFile interface.
type MockRaftFile struct {
	ctrl     *gomock.Controller
	recorder *MockRaftFileMockRecorder
}

// MockRaftFileMockRecorder is the mock recorder for MockRaftFile.
type MockRaftFileMockRecorder struct {
	mock *MockRaftFile
}

// NewMockRaftFile creates a new mock instance.
func NewMockRaftFile(ctrl *gomock.Controller) *MockRaftFile {
	mock := &MockRaftFile{ctrl: ctrl}
	mock.recorder = &MockRaftFileMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRaftFile) EXPECT() *MockRaftFileMockRecorder {
	return m.recorder
}

// LoadFile mocks base method.
func (m *MockRaftFile) LoadFile(arg0 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadFile", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadFile indicates an expected call of LoadFile.
func (mr *MockRaftFileMockRecorder) LoadFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadFile", reflect.TypeOf((*MockRaftFile)(nil).LoadFile), arg0)
}

// SaveFile mocks base method.
func (m *MockRaftFile) SaveFile(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFile", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveFile indicates an expected call of SaveFile.
func (mr *MockRaftFileMockRecorder) SaveFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFile", reflect.TypeOf((*MockRaftFile)(nil).SaveFile), arg0)
}
